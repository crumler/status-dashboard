{"version":3,"sources":["components/Header.js","components/HerokuStatus.js","components/GithubStatus.js","App.js","reportWebVitals.js","index.js"],"names":["Header","color","fontSize","HerokuStatus","props","className","href","target","rel","appsStatus","dataStatus","toolsStatus","GitHubStatus","gitOperationsStatus","githubApiRequests","githubWebhooks","githubIssues","githubPullRequests","githubActions","githubPackages","githubPages","githubCodespaces","App","useState","herokuAppsStatus","setHerokuAppsStatus","herokuDataStatus","setHerokuDataStatus","herokuToolsStatus","setHerokuToolsStatus","githubGitOperations","setGithubGitOperations","setGithubApiRequests","setGithubWebhooks","setGithubIssues","setGithubPullRequests","setGithubActions","setGithubPackages","setGithubPages","setGithubCodespaces","useEffect","Axios","get","then","response","console","log","data","status","components","GithubStatus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbf121f6.chunk.js","sourcesContent":["import CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n    <header>\r\n      <h1>EDAT Operations Status Page Dashboard</h1>\r\n      <h3><CheckCircleIcon color=\"success\" fontSize=\"medium\" /> = Fully Operational | <CheckCircleIcon color=\"primary\" fontSize=\"medium\" /> = Maintenance | <WarningIcon color=\"error\" fontSize=\"medium\" /> = Outage</h3>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\n\r\nconst HerokuStatus = (props) => {\r\n\r\n  return (\r\n    <div className=\"currentHerokuStatus\">\r\n      <a href=\"https://status.heroku.com/\" target=\"_blank\" rel=\"noreferrer\"><h3>Heroku:</h3></a>\r\n      <div className=\"status\">Apps: {props.appsStatus === 'green' ? <CheckCircleIcon color=\"success\" fontSize=\"large\" /> : props.appsStatus === 'blue' ? <CheckCircleIcon color=\"primary\" fontSize=\"large\" /> : <a href=\"https://status.heroku.com/\"><WarningIcon color=\"error\" fontSize=\"large\" /></a>} </div>\r\n      <div className=\"status\">Data: {props.dataStatus === 'green' ? <CheckCircleIcon color=\"success\" fontSize=\"large\" /> : <a href=\"https://status.heroku.com/\"><WarningIcon color=\"error\" fontSize=\"large\" /></a>}</div>\r\n      <div className=\"status\">Tools: {props.toolsStatus === 'green' ? <CheckCircleIcon color=\"success\" fontSize=\"large\" /> : <a href=\"https://status.heroku.com/\"><WarningIcon color=\"error\" fontSize=\"large\" /></a>}</div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default HerokuStatus;","import CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\n\r\nconst GitHubStatus = (props) => {\r\n\r\n  return (\r\n    <div className=\"currentGithubStatus\">\r\n      <a href=\"https://www.githubstatus.com\" target=\"_blank\" rel=\"noreferrer\"><h3>GitHub:</h3></a>\r\n      <div className=\"status\">Git Operations: {props.gitOperationsStatus === 'operational' ? <CheckCircleIcon color=\"success\" fontSize=\"large\" /> : <a href=\"https://www.githubstatus.com/\"><WarningIcon color=\"error\" fontSize=\"large\" /></a>} </div>\r\n      <div className=\"status\">API Requests: {props.githubApiRequests === 'operational' ? <CheckCircleIcon color=\"success\" fontSize=\"large\" /> : <a href=\"https://www.githubstatus.com/\"><WarningIcon color=\"error\" fontSize=\"large\" /></a>}</div>\r\n      <div className=\"status\">Webhooks: {props.githubWebhooks === 'operational' ? <CheckCircleIcon color=\"success\" fontSize=\"large\" /> : <a href=\"https://www.githubstatus.com/\"><WarningIcon color=\"error\" fontSize=\"large\" /></a>}</div>\r\n      <div className=\"status\">Issues: {props.githubIssues === 'operational' ? <CheckCircleIcon color=\"success\" fontSize=\"large\" /> : <a href=\"https://www.githubstatus.com/\"><WarningIcon color=\"error\" fontSize=\"large\" /></a>}</div>\r\n      <div className=\"status\">Pull Requests: {props.githubPullRequests === 'operational' ? <CheckCircleIcon color=\"success\" fontSize=\"large\" /> : <a href=\"https://www.githubstatus.com/\"><WarningIcon color=\"error\" fontSize=\"large\" /></a>}</div>\r\n      <div className=\"status\">GitHub Actions: {props.githubActions === 'operational' ? <CheckCircleIcon color=\"success\" fontSize=\"large\" /> : <a href=\"https://www.githubstatus.com/\"><WarningIcon color=\"error\" fontSize=\"large\" /></a>}</div>\r\n      <div className=\"status\">GitHub Packages: {props.githubPackages === 'operational' ? <CheckCircleIcon color=\"success\" fontSize=\"large\" /> : <a href=\"https://www.githubstatus.com/\"><WarningIcon color=\"error\" fontSize=\"large\" /></a>}</div>\r\n      <div className=\"status\">GitHub Pages: {props.githubPages === 'operational' ? <CheckCircleIcon color=\"success\" fontSize=\"large\" /> : <a href=\"https://www.githubstatus.com/\"><WarningIcon color=\"error\" fontSize=\"large\" /></a>}</div>\r\n      <div className=\"status\">Codespaces: {props.githubCodespaces === 'operational' ? <CheckCircleIcon color=\"success\" fontSize=\"large\" /> : <a href=\"https://www.githubstatus.com/\"><WarningIcon color=\"error\" fontSize=\"large\" /></a>}</div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GitHubStatus;","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport Header from './components/Header';\nimport HerokuStatus from './components/HerokuStatus';\nimport GithubStatus from './components/GithubStatus';\n\nfunction App() {\n  const herokuURL = \"https://status.heroku.com/api/v4/current-status\";\n  const githubURL = \"https://www.githubstatus.com/api/v2/summary.json\";\n\n  //Heroku Status Categories\n  const [herokuAppsStatus, setHerokuAppsStatus] = useState(\"\");\n  const [herokuDataStatus, setHerokuDataStatus] = useState(\"\");\n  const [herokuToolsStatus, setHerokuToolsStatus] = useState(\"\");\n\n  //GitHub Status Categories\n  const [githubGitOperations, setGithubGitOperations] = useState(\"\");\n  const [githubApiRequests, setGithubApiRequests] = useState(\"\");\n  const [githubWebhooks, setGithubWebhooks] = useState(\"\");\n  const [githubIssues, setGithubIssues] = useState(\"\");\n  const [githubPullRequests, setGithubPullRequests] = useState(\"\");\n  const [githubActions, setGithubActions] = useState(\"\");\n  const [githubPackages, setGithubPackages] = useState(\"\");\n  const [githubPages, setGithubPages] = useState(\"\");\n  const [githubCodespaces, setGithubCodespaces] = useState(\"\");\n\n  useEffect(() => {\n    Axios.get(herokuURL).then((response) => {\n      console.log(response.data);\n      setHerokuAppsStatus(response.data.status[0].status);\n      setHerokuDataStatus(response.data.status[1].status);\n      setHerokuToolsStatus(response.data.status[2].status);\n    });\n  });\n\n  useEffect(() => {\n    Axios.get(githubURL).then((response) => {\n      // console.log(response.data);\n      // console.log(response.data.components[0].status);\n      setGithubGitOperations(response.data.components[0].status);\n      setGithubApiRequests(response.data.components[1].status);\n      setGithubWebhooks(response.data.components[2].status);\n      setGithubIssues(response.data.components[4].status);\n      setGithubPullRequests(response.data.components[5].status);\n      setGithubActions(response.data.components[6].status);\n      setGithubPackages(response.data.components[7].status);\n      setGithubPages(response.data.components[8].status);\n      setGithubCodespaces(response.data.components[9].status);\n    });\n  });\n  \n  return (\n    <div>\n      <Header />\n      <div className=\"flexContainer\">\n        <HerokuStatus appsStatus={herokuAppsStatus} dataStatus={herokuDataStatus} toolsStatus={herokuToolsStatus} />\n        <GithubStatus gitOperationsStatus={githubGitOperations}\n          githubApiRequests={githubApiRequests}\n          githubWebhooks={githubWebhooks}\n          githubIssues={githubIssues}\n          githubPullRequests={githubPullRequests}\n          githubActions={githubActions}\n          githubPackages={githubPackages}\n          githubPages={githubPages}\n          githubCodespaces={githubCodespaces}\n        />\n      </div>\n\n    </div> \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}